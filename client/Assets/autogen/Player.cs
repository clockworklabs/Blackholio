// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN RUST INSTEAD.
// <auto-generated />

#nullable enable

using System;
using SpacetimeDB;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.Serialization;

namespace SpacetimeDB.Types
{
	[SpacetimeDB.Type]
	[DataContract]
	public partial class Player : SpacetimeDB.DatabaseTableWithPrimaryKey<Player, SpacetimeDB.Types.ReducerEvent>
	{
		[DataMember(Name = "identity")]
		public SpacetimeDB.Identity Identity = new();
		[DataMember(Name = "player_id")]
		public uint PlayerId;
		[DataMember(Name = "name")]
		public string Name = "";

		private static Dictionary<SpacetimeDB.Identity, Player> Identity_Index = new(16);
		private static Dictionary<uint, Player> PlayerId_Index = new(16);

		public override void InternalOnValueInserted()
		{
			Identity_Index[Identity] = this;
			PlayerId_Index[PlayerId] = this;
		}

		public override void InternalOnValueDeleted()
		{
			Identity_Index.Remove(Identity);
			PlayerId_Index.Remove(PlayerId);
		}

		public static Player? FindByIdentity(SpacetimeDB.Identity value)
		{
			Identity_Index.TryGetValue(value, out var r);
			return r;
		}

		public static IEnumerable<Player> FilterByIdentity(SpacetimeDB.Identity value)
		{
			if (FindByIdentity(value) is {} found)
			{
				yield return found;
			}
		}

		public static Player? FindByPlayerId(uint value)
		{
			PlayerId_Index.TryGetValue(value, out var r);
			return r;
		}

		public static IEnumerable<Player> FilterByPlayerId(uint value)
		{
			if (FindByPlayerId(value) is {} found)
			{
				yield return found;
			}
		}

		public static IEnumerable<Player> FilterByName(string value)
		{
			return Query(x => x.Name == value);
		}

		public override object GetPrimaryKeyValue() => Identity;

	}
}
